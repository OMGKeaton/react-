{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u6797\\u6668\\u7684\\u6797\\\\Desktop\\\\\\u6E90\\u7801\\\\react_staging\\\\src\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport List from './components/List';\nimport Footer from './components/Footer';\nimport './App.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: '001',\n        name: '吃饭',\n        done: true\n      }, {\n        id: '002',\n        name: '睡觉',\n        done: true\n      }, {\n        id: '003',\n        name: '打代码',\n        done: false\n      }, {\n        id: '004',\n        name: '逛街',\n        done: false\n      }]\n    };\n  }\n\n  // //addTodo用于添加一个todo，接收的参数是todo对象\n  // addTodo = (todoObj)=>{\n  // \t//获取原todos\n  // \tconst {todos} = this.state\n  // \t//追加一个todo\n  // \tconst newTodos = [todoObj,...todos]\n  // \t//更新状态\n  // \tthis.setState({todos:newTodos})\n  // }\n  //\n  // //updateTodo用于更新一个todo对象\n  // updateTodo = (id,done)=>{\n  // \t//获取状态中的todos\n  // \tconst {todos} = this.state\n  // \t//匹配处理数据\n  // \tconst newTodos = todos.map((todoObj)=>{\n  // \t\tif(todoObj.id === id) return {...todoObj,done}\n  // \t\telse return todoObj\n  // \t})\n  // \tthis.setState({todos:newTodos})\n  // }\n  //\n  // //deleteTodo用于删除一个todo对象\n  // deleteTodo = (id)=>{\n  // \t//获取原来的todos\n  // \tconst {todos} = this.state\n  // \t//删除指定id的todo对象\n  // \tconst newTodos = todos.filter((todoObj)=>{\n  // \t\treturn todoObj.id !== id\n  // \t})\n  // \t//更新状态\n  // \tthis.setState({todos:newTodos})\n  // }\n  //\n  // //checkAllTodo用于全选\n  // checkAllTodo = (done)=>{\n  // \t//获取原来的todos\n  // \tconst {todos} = this.state\n  // \t//加工数据\n  // \tconst newTodos = todos.map((todoObj)=>{\n  // \t\treturn {...todoObj,done}\n  // \t})\n  // \t//更新状态\n  // \tthis.setState({todos:newTodos})\n  // }\n  //\n  // //clearAllDone用于清除所有已完成的\n  // clearAllDone = ()=>{\n  // \t//获取原来的todos\n  // \tconst {todos} = this.state\n  // \t//过滤数据\n  // \tconst newTodos = todos.filter((todoObj)=>{\n  // \t\treturn !todoObj.done\n  // \t})\n  // \t//更新状态\n  // \tthis.setState({todos:newTodos})\n  // }\n  // render() {\n  // \tconst {todos} = this.state\n  // \treturn (\n  // \t\t<div className=\"todo-container\">\n  // \t\t\t<div className=\"todo-wrap\">\n  // \t\t\t\t<Header addTodo={this.addTodo}/>\n  // \t\t\t\t<List todos={todos} updateTodo={this.updateTodo} deleteTodo={this.deleteTodo}/>\n  // \t\t\t\t<Footer todos={todos} checkAllTodo={this.checkAllTodo} clearAllDone={this.clearAllDone}/>\n  // \t\t\t</div>\n  // \t\t</div>\n  // \t)\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(List, { ...todo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/林晨的林/Desktop/源码/react_staging/src/App.jsx"],"names":["React","Component","Header","List","Footer","App","state","todos","id","name","done","render","todo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;AAEA,eAAe,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAI1CK,KAJ0C,GAIlC;AAACC,MAAAA,KAAK,EAAC,CACd;AAACC,QAAAA,EAAE,EAAC,KAAJ;AAAUC,QAAAA,IAAI,EAAC,IAAf;AAAoBC,QAAAA,IAAI,EAAC;AAAzB,OADc,EAEd;AAACF,QAAAA,EAAE,EAAC,KAAJ;AAAUC,QAAAA,IAAI,EAAC,IAAf;AAAoBC,QAAAA,IAAI,EAAC;AAAzB,OAFc,EAGd;AAACF,QAAAA,EAAE,EAAC,KAAJ;AAAUC,QAAAA,IAAI,EAAC,KAAf;AAAqBC,QAAAA,IAAI,EAAC;AAA1B,OAHc,EAId;AAACF,QAAAA,EAAE,EAAC,KAAJ;AAAUC,QAAAA,IAAI,EAAC,IAAf;AAAoBC,QAAAA,IAAI,EAAC;AAAzB,OAJc;AAAP,KAJkC;AAAA;;AAW1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,IAAD,OAAUC;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AASA;;AA3FyC","sourcesContent":["import React, { Component } from 'react'\r\nimport Header from './components/Header'\r\nimport List from './components/List'\r\nimport Footer from './components/Footer'\r\nimport './App.css'\r\n\r\nexport default class App extends Component {\r\n\t//状态在哪里，操作状态的方法就在哪里\r\n\r\n\t//初始化状态\r\n\tstate = {todos:[\r\n\t\t{id:'001',name:'吃饭',done:true},\r\n\t\t{id:'002',name:'睡觉',done:true},\r\n\t\t{id:'003',name:'打代码',done:false},\r\n\t\t{id:'004',name:'逛街',done:false}\r\n\t]}\r\n\r\n\t// //addTodo用于添加一个todo，接收的参数是todo对象\r\n\t// addTodo = (todoObj)=>{\r\n\t// \t//获取原todos\r\n\t// \tconst {todos} = this.state\r\n\t// \t//追加一个todo\r\n\t// \tconst newTodos = [todoObj,...todos]\r\n\t// \t//更新状态\r\n\t// \tthis.setState({todos:newTodos})\r\n\t// }\r\n\t//\r\n\t// //updateTodo用于更新一个todo对象\r\n\t// updateTodo = (id,done)=>{\r\n\t// \t//获取状态中的todos\r\n\t// \tconst {todos} = this.state\r\n\t// \t//匹配处理数据\r\n\t// \tconst newTodos = todos.map((todoObj)=>{\r\n\t// \t\tif(todoObj.id === id) return {...todoObj,done}\r\n\t// \t\telse return todoObj\r\n\t// \t})\r\n\t// \tthis.setState({todos:newTodos})\r\n\t// }\r\n\t//\r\n\t// //deleteTodo用于删除一个todo对象\r\n\t// deleteTodo = (id)=>{\r\n\t// \t//获取原来的todos\r\n\t// \tconst {todos} = this.state\r\n\t// \t//删除指定id的todo对象\r\n\t// \tconst newTodos = todos.filter((todoObj)=>{\r\n\t// \t\treturn todoObj.id !== id\r\n\t// \t})\r\n\t// \t//更新状态\r\n\t// \tthis.setState({todos:newTodos})\r\n\t// }\r\n\t//\r\n\t// //checkAllTodo用于全选\r\n\t// checkAllTodo = (done)=>{\r\n\t// \t//获取原来的todos\r\n\t// \tconst {todos} = this.state\r\n\t// \t//加工数据\r\n\t// \tconst newTodos = todos.map((todoObj)=>{\r\n\t// \t\treturn {...todoObj,done}\r\n\t// \t})\r\n\t// \t//更新状态\r\n\t// \tthis.setState({todos:newTodos})\r\n\t// }\r\n\t//\r\n\t// //clearAllDone用于清除所有已完成的\r\n\t// clearAllDone = ()=>{\r\n\t// \t//获取原来的todos\r\n\t// \tconst {todos} = this.state\r\n\t// \t//过滤数据\r\n\t// \tconst newTodos = todos.filter((todoObj)=>{\r\n\t// \t\treturn !todoObj.done\r\n\t// \t})\r\n\t// \t//更新状态\r\n\t// \tthis.setState({todos:newTodos})\r\n\t// }\r\n\r\n\t// render() {\r\n\t// \tconst {todos} = this.state\r\n\t// \treturn (\r\n\t// \t\t<div className=\"todo-container\">\r\n\t// \t\t\t<div className=\"todo-wrap\">\r\n\t// \t\t\t\t<Header addTodo={this.addTodo}/>\r\n\t// \t\t\t\t<List todos={todos} updateTodo={this.updateTodo} deleteTodo={this.deleteTodo}/>\r\n\t// \t\t\t\t<Footer todos={todos} checkAllTodo={this.checkAllTodo} clearAllDone={this.clearAllDone}/>\r\n\t// \t\t\t</div>\r\n\t// \t\t</div>\r\n\t// \t)\r\n\t// }\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"todo-container\">\r\n\t\t\t\t<div className=\"todo-wrap\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<List {...todo}/>\r\n\t\t\t\t\t<Footer />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}